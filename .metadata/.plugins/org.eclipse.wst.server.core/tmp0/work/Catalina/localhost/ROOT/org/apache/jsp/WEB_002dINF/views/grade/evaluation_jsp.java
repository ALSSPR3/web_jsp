/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.25
 * Generated at: 2024-07-30 02:07:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.grade;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class evaluation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/evaluation.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div>\r\n");
      out.write("		<h1>강의 평가</h1>\r\n");
      out.write("	</div>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/evaluation\" method=\"post\">\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><h3>1.강의 내용은 자신에게 학습 욕구를 불러일으킬 만큼 적절한 수준이었는가?</h3></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer1\" value=\"5\" id=\"a11\"> <label for=\"a11\"> 매우 그렇다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer1\" value=\"4\" id=\"a12\"> <label for=\"a12\"> 그렇다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer1\" value=\"3\" id=\"a13\"> <label for=\"a13\"> 보통이다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer1\" value=\"2\" id=\"a14\"> <label for=\"a14\"> 그렇지 않다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer1\" value=\"1\" id=\"a15\"> <label for=\"a15\"> 전혀 그렇지 않다</label></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><h3>2. 이 강의를 통하여 다른 강의에서는 접할 수 없는 새로운 내용을 배울 수 있었는가?</h3></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer2\" value=\"5\" id=\"a21\"> <label for=\"a21\"> 매우 그렇다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer2\" value=\"4\" id=\"a22\"> <label for=\"a22\"> 그렇다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer2\" value=\"3\" id=\"a23\"> <label for=\"a23\"> 보통이다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer2\" value=\"2\" id=\"a24\"> <label for=\"a24\"> 그렇지 않다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer2\" value=\"1\" id=\"a25\"> <label for=\"a25\"> 전혀 그렇지 않다</label></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><h3>3. 강의를 통하여 해당 교과목에 대한 이해(실기 능력과 기능)가 개선되었는가?</h3></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer3\" value=\"5\" id=\"a31\"> <label for=\"a31\"> 매우 그렇다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer3\" value=\"4\" id=\"a32\"> <label for=\"a32\"> 그렇다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer3\" value=\"3\" id=\"a33\"> <label for=\"a33\"> 보통이다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer3\" value=\"2\" id=\"a34\"> <label for=\"a34\"> 그렇지 않다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer3\" value=\"1\" id=\"a35\"> <label for=\"a35\"> 전혀 그렇지 않다</label></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><h3>4. 교수는 주요 주제들간의 관계가 드러나도록 내용을 구조화 하여 전달하였는가?</h3></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer4\" value=\"5\" id=\"a41\"> <label for=\"a41\"> 매우 그렇다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer4\" value=\"4\" id=\"a42\"> <label for=\"a42\"> 그렇다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer4\" value=\"3\" id=\"a43\"> <label for=\"a43\"> 보통이다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer4\" value=\"2\" id=\"a44\"> <label for=\"a44\"> 그렇지 않다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer4\" value=\"1\" id=\"a45\"> <label for=\"a45\"> 전혀 그렇지 않다</label></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><h3>5. 교수는 열정을 갖고 수업을 진행하였는가?</h3></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer5\" value=\"5\" id=\"a51\"> <label for=\"a51\"> 매우 그렇다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer5\" value=\"4\" id=\"a52\"> <label for=\"a52\"> 그렇다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer5\" value=\"3\" id=\"a53\"> <label for=\"a53\"> 보통이다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer5\" value=\"2\" id=\"a54\"> <label for=\"a54\"> 그렇지 않다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer5\" value=\"1\" id=\"a55\"> <label for=\"a55\"> 전혀 그렇지 않다</label></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><h3>6. 수업시간은 제대로 이루어졌는가?</h3></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer6\" value=\"5\" id=\"a61\"> <label for=\"a61\"> 매우 그렇다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer6\" value=\"4\" id=\"a62\"> <label for=\"a62\"> 그렇다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer6\" value=\"3\" id=\"a63\"> <label for=\"a63\"> 보통이다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer6\" value=\"2\" id=\"a64\"> <label for=\"a64\"> 그렇지 않다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer6\" value=\"1\" id=\"a65\"> <label for=\"a65\"> 전혀 그렇지 않다</label></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><h3>7. 강의 내용이 과목명에 부합하는가?</h3></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer7\" value=\"5\" id=\"a71\"> <label for=\"a71\"> 매우 그렇다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer7\" value=\"4\" id=\"a72\"> <label for=\"a72\"> 그렇다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer7\" value=\"3\" id=\"a73\"> <label for=\"a73\"> 보통이다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer7\" value=\"2\" id=\"a74\"> <label for=\"a74\"> 그렇지 않다</label></li>\r\n");
      out.write("			<li><input type=\"radio\" name=\"answer7\" value=\"1\" id=\"a75\"> <label for=\"a75\"> 전혀 그렇지 않다</label></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><span>기타</span></li>\r\n");
      out.write("			<li><textarea cols=\"80\" rows=\"5\" name=\"improvements\"> </textarea></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("		<div>\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("			<input type=\"hidden\" name=\"subjectId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${subjectId}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("			<button type=\"submit\">제출하기</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
